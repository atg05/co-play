import MiniPlayer from "@/components/player";
import styles from "@/styles/Home.module.css";
import Alert from "react-bootstrap/Alert";
import { Inter } from "next/font/google";
import Head from "next/head";
import { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [activeSongUrl, setActiveSongUrl] = useState(null);
  const [songsList, setSongsLists] = useState([]);

  const handleEmbedUrl = (e) => {
    // console.log(e.target.value);
    let newSongs = {};
    const value = e.target.value;

    const startIndex = value.indexOf("/embed/") + 7; // add 7 to get to the end of "/embed/"
    const endIndex = value.indexOf('"', startIndex);
    const videoUrl = value.substring(startIndex, endIndex);
    const titleIndex = value.indexOf(`title="`) + 7; // add 7 to get to the end of "/embed/"
    const titleEndIndex = value.indexOf('"', titleIndex);
    const videoTitle = value.substring(titleIndex, titleEndIndex);
    console.log(videoTitle, videoUrl);

    songsList.forEach((song) => {
      if (song.url === videoUrl) {
        alert("Inside duplicate");
        <Alert key={videoUrl} variant={"danger"}>
          Duplicate Song!
        </Alert>;
        return;
      }
    });
    newSongs["title"] = videoTitle?.replace("&quot;", "");
    newSongs["url"] = videoUrl;

    if (!newSongs.title || !newSongs.url) {
      alert("Invalid");
      return;
    }
    if (videoTitle?.toLowerCase()?.includes("audio")) {
      alert("Please add audio only. Simply search song-name + audio only");
    } else if (videoTitle?.toLowerCase()?.includes("lyric")) {
    } else {
      alert(
        "Please add audio only. Simply search song-name + audio only / Lyric"
      );
      return;
    }

    if (true) setSongsLists((list) => [...list, newSongs]);
    else {
      alert("Not Vallid");
    }
  };

  return (
    <>
      <Head>
        <title>Co Player</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <p
          style={{
            color: "#2F58CD",
            fontSize: "5rem",
            boxShadow: "rgb(38, 57, 77)",
          }}
        >
          Co Player
        </p>
        <div className={styles.player_body}>
          <div className={styles.left_container}>
            {songsList.map((song, index) => {
              return (
                <p
                  className={styles.each_song}
                  key={song.url}
                  onClick={() => setActiveSongUrl(song.url)}
                >
                  {song.title}
                </p>
              );
            })}
            {songsList.map((song, index) => {
              return (
                <p
                  className={styles.each_song}
                  key={song.url}
                  onClick={() => setActiveSongUrl(song.url)}
                >
                  {song.title}
                </p>
              );
            })}
            {songsList.map((song, index) => {
              return (
                <p
                  className={styles.each_song}
                  key={song.url}
                  onClick={() => setActiveSongUrl(song.url)}
                >
                  {song.title}
                </p>
              );
            })}
            {songsList.map((song, index) => {
              return (
                <p
                  className={styles.each_song}
                  key={song.url}
                  onClick={() => setActiveSongUrl(song.url)}
                >
                  {song.title}
                </p>
              );
            })}
          </div>
          <div className={styles.right_container}>
            <MiniPlayer url={activeSongUrl} />

            <textarea
              style={{
                width: "100%",
                height: "140px",
                marginTop: "2em",
                boxShadow: "rgba(0, 0, 0, 0.24) 0px 3px 8px",
              }}
              onChange={handleEmbedUrl}
            />
          </div>
        </div>
      </main>
    </>
  );
}
